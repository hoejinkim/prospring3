<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<annotation-driven validator="validator" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 리소스의 폴더를 정의한다. -->
	<resources mapping="/resources/**" location="/, classpath:/META-INF/web-resources/" />
	
	<default-servlet-handler />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!--
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jspx" />
	</beans:bean>
	-->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/layouts/layouts.xml</beans:value>
				<!-- Scan views directory for Tiles configurations -->
				<beans:value>/WEB-INF/views/**/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.apress.prospring3.ch17.web.controller" />
	
	<interceptors>
		<!-- 
			DispatcherServlet에 대한 요청을 모두 가로챈다.
			설정 가능한 요청 파라미터를 통한 로케일 전환을 지원한다.
			어플리케이션의 로케일을 바꿀 수 있는 lang이라는 URL 패턴이 정의되어 있다. 
		-->
		<beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="lang" />
		</beans:bean>
		<beans:bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
	</interceptors>
	
	<!-- 
		정의된 파일(/WEB-INF/i18n/messages*.properties)에서 메시지를 로드해 i18n을 지원하는
		MessageSource 인터페이스를 구현한다.
	 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames" value="WEB-INF/i18n/messages, WEB-INF/i18n/application" />
		<beans:property name="fallbackToSystemLocale" value="false" />
	</beans:bean>
	
	<!-- 
		사용자 브라우저 쿠키에서 가져온 로케일을 저장하고 조회하는 기능을 지원한다.
	 -->
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="cookieName" value="locale" />
	</beans:bean>
	
	<beans:bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource" />
	
	<beans:bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver">
		<beans:property name="cookieName" value="theme" />
		<beans:property name="defaultThemeName" value="standard" />
	</beans:bean>
	
	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource" />
	</beans:bean>
	
	<!-- 
		스프링 3.1이 서블릿 3.0 컨테이너에서의 네이티브 파일 업로드 지원을 위해 새로 제공하는 클래스
	 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	
</beans:beans>
